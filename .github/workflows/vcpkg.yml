name: vcpkg tests

on:
  workflow_dispatch:
  push:
    branches:
    - vcpkg

env:
  VCPKG_ROOT: '${{ github.workspace }}\vc'
  INSTALL_DIR: '${{ github.workspace }}\win32'

# Notes for PowerShell novices (like me):
# 
# * To access Environment variables
#   > $env:<NAME>
#   (where <NAME> is the variable name)
#
# * PowerShell doesn't recognise the following as paths:
#   > $env:<PATH>/subpath
#   > $env:<PATH>\subpath
#   Instead, prefix the "call operator", like so:
#   > & $env:<PATH>/subpath
#   > & $env:<PATH>\subpath


jobs:
  build:
    runs-on: windows-2016

    steps:

    - name: Install and Build vcpkg locally
      run: |
        md $env:VCPKG_ROOT
        cd $env:VCPKG_ROOT
        git clone --depth=1 https://github.com/Microsoft/vcpkg.git --branch=2021.05.12 .
        .\bootstrap-vcpkg.bat -disableMetrics

    - name: Run `vcpkg help`
      run: |
        & $env:VCPKG_ROOT\vcpkg help

    # Not available from vcpkg: FCollada, Gloox, SpiderMonkey
    - name: Install some packages
      run: >
        & $env:VCPKG_ROOT\vcpkg install
        --clean-buildtrees-after-build
        --clean-packages-after-build
        --x-install-root=$env:INSTALL_DIR
        --debug
        wxwidgets

    - name: Install the same packages again
      run: >
        & $env:VCPKG_ROOT\vcpkg install
        --clean-buildtrees-after-build
        --clean-packages-after-build
        --x-install-root=$env:INSTALL_DIR
        --debug
        wxwidgets

    - name: Print Locations
      run: |
        (Get-ChildItem $env:VCPKG_ROOT -recurse).FullName

    - name: Print Locations
      run: |
        (Get-ChildItem $env:INSTALL_DIR -recurse).FullName

    #~ - name: Package
      #~ uses: actions/upload-artifact@v2
      #~ with:
        #~ name: vcpkg
        #~ path: |
          #~ ${{ env.INSTALL_DIR }}\x86-windows
          #~ !${{ env.INSTALL_DIR }}\x86-windows\share
