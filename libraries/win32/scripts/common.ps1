
<#
Determine architecture of Host.
#>
$env:HostArchitecture = 'x86'
if ([Environment]::Is64BitOperatingSystem) {
  $env:HostArchitecture = 'x64'
}

<#
The target architecture.

@todo: make this an user-passable option, defaulting to 'x86'
#>
$env:TargetArchitecture = 'x86'

<#
Target platform for MSVC.

Support level in .vcxproj files:
* NVTT        : generated by cmake, so (should) support all possibilities
* FCollada    : only supports Win32, x64
* gloox       : only supports Win32
#>
switch ($env:TargetArchitecture)
{
  'x86'   { $env:MSVCPlatform = 'Win32' }
  'x64'   { $env:MSVCPlatform = 'x64'   }
# 'arm'   { $env:MSVCPlatform = 'ARM'   }
# 'arm64' { $env:MSVCPlatform = 'ARM64' }
  Default { $env:MSVCPlatform = 'Win32' }
}

<#
The folders used to collate .dll and .pdb files as they are built.

Once the final pyrogenesis executables are built, said .exes can be scanned to determine which
.dlls (and thus .pdbs) are actually needed, and these can be transferred over.

 libraries\win32\
  '- bin
      |- debug
      '- release
#>
$BIN_DIR             = "$PSScriptRoot\..\bin"
$env:BIN_DIR_RELEASE = "$BIN_DIR\release"
$env:BIN_DIR_DEBUG   = "$BIN_DIR\debug"
if (!(Test-Path -Path $BIN_DIR)) {
  New-Item -Path $BIN_DIR             -ItemType Directory | Out-Null
  New-Item -Path $env:BIN_DIR_RELEASE -ItemType Directory | Out-Null
  New-Item -Path $env:BIN_DIR_DEBUG   -ItemType Directory | Out-Null
}
